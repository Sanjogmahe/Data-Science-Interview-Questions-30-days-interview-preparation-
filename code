import pandas as pd
import json

def normalize_json(json_obj):
    def recursive_normalize(item):
        if isinstance(item, dict):
            normalized_dict = {}
            for key, value in item.items():
                normalized_dict[key] = recursive_normalize(value)
            return normalized_dict
        elif isinstance(item, list):
            return [recursive_normalize(value) for value in item]
        elif item is None:
            return None
        else:
            try:
                int_value = int(item)
                return int_value if str(int_value) == item else float(item)
            except ValueError:
                try:
                    return float(item)
                except ValueError:
                    return item

    normalized_data = recursive_normalize(json_obj)
    return pd.json_normalize(normalized_data)

# Example nested JSON data
json_data = {
    "key1": "1.23",
    "key2": 4,
    "key3": {
        "subkey1": "5.67",
        "subkey2": 10,
        "subkey3": None
    },
    "key4": None
}

normalized_df = normalize_json(json_data)
print(normalized_df)
